{"version":3,"sources":["../src/State.js"],"names":[],"mappings":"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","file":"State.js","sourcesContent":["import {funcName, dashCase} from './utils';\nimport {app} from './app';\nimport {Controller} from './Controller';\n\nconst DEFAULT_SUFFIX = 'Controller';\n\nexport function State(opts) {\n  if (typeof opts === 'function') {\n    var constructor = opts; opts = null;\n    return register(constructor);\n  }\n\n  opts = (opts || {});\n  var {\n    url,\n    abstract,\n    children=[],\n    scope={},\n    resolve={},\n    template,\n    templateUrl\n  } = opts;\n  return register;\n\n  function register(constructor) {\n    Controller(constructor);\n\n    var name = funcName(constructor);\n    name = name[0].toLowerCase() + name.substr(1, name.length - DEFAULT_SUFFIX.length - 1);\n\n    if (!template && !templateUrl && (template !== false)) {\n      var tmplName = dashCase(name);\n      templateUrl = './components/'+tmplName+'/'+tmplName+'.html';\n    }\n\n    if (template === false) {\n      template = undefined;\n      templateUrl = undefined;\n    }\n\n    if (constructor.$$resolvers) {\n      for (let name in constructor.$$resolvers) {\n        resolve[name] = constructor.$$resolvers[name];\n      }\n    }\n\n    let state = {\n      name:         name,\n      template:     template,\n      templateUrl:  templateUrl,\n      controller:   funcName(constructor),\n      controllerAs: name,\n\n      children:     children.map(c => Object.create(c.$state, {})),\n      resolve:      resolve,\n      url:          url,\n      abstract:     abstract,\n    };\n\n    if (constructor.onEnter) {\n      state.onEnter = constructor.onEnter;\n    }\n\n    if (constructor.onExit) {\n      state.onExit = constructor.onExit;\n    }\n\n    constructor.$state = state;\n  }\n}\n\nState.resolveAs = function resolveAs(name) {\n  return function(target, funcName, desc) {\n    if (!target.$$resolvers) {\n      target.$$resolvers = {};\n    }\n    if (typeof desc.value != 'function') {\n      throw Error(\"expected a function\");\n    }\n    target.$$resolvers[name] = desc.value;\n  };\n}\n"]}